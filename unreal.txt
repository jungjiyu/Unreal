<질문>==============================================

2. 노드와 노드 간의 인과관계 선은 하나만 가능? 하나의 노드가 여러 노드의 원인이 될 수는 없음?
3. 오브젝트 , 엑터, 에셋 차이
4. 화면에서 위쪽 쳐다보고 싶음 어케함
5. 오브젝트 찰 수 있게(?) 하려함 어케함

<실전 용어>=============================================

블루 프린트 blue print: 최종적으로 레벨에 올릴 수 있는 상태의 것.도면.
레벨 level == 맵 map: 사용자가 만든 기능별로 구별한 레이어들

오브젝트 object
엑터 actor: 레벨에 배치 가능한 오브젝트들
폰, 캐릭터 : 키보드 등의 조작을 통해 사용자가 움직일 수 있는 것
에셋 asset: 걍 어떤 것


빙의: 키보드 등의 조작이 가능하게 하는 옵션

<이론 용어>=============================================

.uprogect 확장자 : 언리얼 프로젝트 확장자
데이터 입력하는 것 == 변수. 파라미터
블루 프린트 blue print: 노드 기반 에디터로 편집기증 제공, 오브젝트 제공
레벨 level == 맵 map: 전체 게임 플레이 영역 
클래스 class: 상속 관계 나타냄 (수퍼-서브 클래스)
오브젝트 object: 최상위 클래스(모든 클래스들의 수퍼클래스가 됨)
엑터 actor: 레벨에 배치 가능한 오브젝트들
컴포넌트 component: 액터에 추가할 수 있는 기능 
폰 pawn : 액터의 서브 클래스
	: 게임 안의 지나가는 사람1 역할 (npc)

빙의된 possessed : 인간이나 ai 플레이어가 제어 가능 (<--> unpossessed)
캐릭터 character: 폰 액터의 서브 클래스

에셋 asset:

<이벤트 그래프>=============================================

구성요소)
------줄------
위에 하얀줄: 인과관계를 나타냄(인풋이 아님)
하얀줄 아랫줄: 인풋(앞에 노드),아웃풋(뒤에 노드)
-----빨간 노드 ( 기본으로 주는 노드 )-------
event tick: 매순간 실행
event beginplay: 시작시 실행
event actorbeginoverlap: 다른 엑터와 충돌시 발생하는 이벤트



기능)
줄 끊기: alt 키 누르고 포인트 클릭
변수 끌어오기: 드래그 함
	: 대부분의 경우 set 을 보통 쓰지만 여러개의 초기값 설정을 필요로 할땐 get이 좋음(get은 별도의 인과관계선이 필요 없으니까)
	(1) Get 변수: 출력만 가능
		: 별도의 인과관계선이 없음
	(2) Set 변수: 입력과 출력 모두 가능
		:인과관계선 필요
if문: 브랜치 사용


변수의 특정 요소만 사용: 노드의 변수명 오른쪽 버튼으로 클릭후 구조체핀분할
	: 그러니까 (x,y,z) 좌표 중 x 좌표만 쓰고 싶음 구조체 핀 분할을 하면 구할 수 있다.
	: 만약에 구조체핀분할 옵션 없음 별도의 함수(break 어쩌구) 사용해야됨

모양(?) 추가:
	self 옆의 + 버튼 누름

<유용한 함수들>=============================================
(1)출력
	1.print text: 문자열 출력
		: 한 줄로만 출력가능. 줄 바꾸고 싶음 걍 하나 더 만들어야됨(특이한 점은 끝쪽부터 출력됨)
	2.print string: 문자열 출력
(2)변환
	1.to text: 숫자를 텍스트로 변경
(3)분할
	break 자료형명 : 해당 자료형의 변수의 값을 구성 요소 단위로 분할

<type>=============================================

boolean: 불
integer: 정수
float: 실수
name: 즉각적인 서치용
string: 메모용
text: 번역용
vector: 방향. 크기
rotator: 회전각도
transform: vector+ rotator
	: 구조체분할을 통하여 3개의 값을 꺼내씀


구조체: 여러 변수들을 묶어 편하게 쓰게 한것
인터페이스: 노드 입출력을 미리 해놔 편하게 쓰게 한 것 (스니펫과 비슷)
열거형: 가질 수 있는 값을 미리 정해둠(enum과 비슷)

<블루프린트에서 디테일 창 내용> ==============================================
콜리전 프리셋: 해당 오브젝트의 통과/ 막힘 여부 결정

<무제에서 디테일 창 내용> ==============================================
디폴트- 변수 커스터마이징



==============================================
창
 - 레이아웃 불러오기 - ue4 클래식 >> 자세히 나온다
 - 환경라이트믹서 >> 배경화면 손쉽게 조절 가능
 
환경설정
 - 버츄얼텍스처 지원 활성화 (virtual) >> 데이터 소비 줄인다
